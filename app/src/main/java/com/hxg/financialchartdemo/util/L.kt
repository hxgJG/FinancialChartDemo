package com.hxg.financialchartdemo.util

import android.content.res.Resources
import android.support.annotation.ArrayRes
import android.support.annotation.IntegerRes
import android.support.annotation.StringRes
import android.util.SparseArray
import com.hxg.financialchartdemo.app.App

//localization class
object L {
    val LazyStringArrays = SparseArray<Array<String>>()
    val LazyIntArrays = SparseArray<IntArray>()

    //Application resources
    var RESOURCES: Resources? = null

    fun S(@StringRes id: Int): String {
        return GetResources().getString(id)
    }

    fun S(@StringRes id: Int, vararg formatArgs: Any): String {
        return GetResources().getString(id, *formatArgs)
    }

    /**
     * Return an integer associated with a particular resource ID.

     * @param id The desired resource identifier, as generated by the aapt
     * *           tool. This integer encodes the package, type, and resource
     * *           entry. The value 0 is an invalid identifier.
     * *
     * @return Returns the integer value contained in the resource.
     */
    fun I(@IntegerRes id: Int): Int {
        return GetResources().getInteger(id)
    }

    /**
     * Return the string array associated with a particular resource ID.

     * @param resid The desired resource identifier, as generated by the aapt
     * *              tool. This integer encodes the package, type, and resource
     * *              entry. The value 0 is an invalid identifier.
     * *
     * @return The string array associated with the resource.
     */
    fun SA(@ArrayRes resId: Int): Array<String> {
        var r: Array<String>? = LazyStringArrays.get(resId)
        if (r == null) {
            r = L.sa(resId)
            LazyStringArrays.put(resId, r)
        }

        return r
    }

    private fun sa(@ArrayRes resid: Int): Array<String> {
        return GetResources().getStringArray(resid)
    }

    /**
     * Return the int array associated with a particular resource ID.

     * @param resid The desired resource identifier, as generated by the aapt
     * *              tool. This integer encodes the package, type, and resource
     * *              entry. The value 0 is an invalid identifier.
     * *
     * @return The int array associated with the resource.
     */
    fun IA(@ArrayRes resId: Int): IntArray {
        var r: IntArray? = LazyIntArrays.get(resId)
        if (r == null) {
            r = L.ia(resId)
            LazyIntArrays.put(resId, r)
        }

        return r
    }

    private fun ia(@ArrayRes resId: Int): IntArray {
        return GetResources().getIntArray(resId)
    }

    fun GetResources(): Resources {
        if (RESOURCES == null) {
            RESOURCES = App.INSTANCE.CONTEXT.resources
        }

        return RESOURCES!!
    }

    //We need to release resource since it might leak some bitmaps...
    fun ReleaseResources() {
        RESOURCES = null
    }

    /**
     * Update the Application resources for locale changed

     * @param res The new application resources.
     */
    fun ResetAppResources(res: Resources) {
        RESOURCES = res
    }
}
